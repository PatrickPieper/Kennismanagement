@model La_Game.Models.Participant

@{
    ViewBag.Title = "QuestionlistResult";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var qlist = ViewBag.questionListName;
    var results = ViewBag.results;
    var attempts = ViewBag.attempts;
    var attemptCount = ViewBag.attemptCount;
    int count = 1;
}

<h2>@qlist</h2>
<hr />


<div class="container-fluid">
    <table class="table table-responsive">
        <thead>
        <th></th>
        @foreach (var attempt in attempts)
        {
            <th>Attempt @attempt</th>
        }
        </thead>
        <tbody>
            @foreach (var result in results)
            {
                <tr>
                    <td> @Html.Raw(result[1].questionText)</td>
                    
                    @for (int i = 1; i <= attemptCount; i++)
                    {
                        if (result.ContainsKey(i))
                        {
                            var value = result[i];
                            <td>@Html.Raw(value.answerText) (@Html.Raw(value.totalTime))</td>
                        }
                        else
                        {
                            <td>-</td>
                        }
                    }

                </tr>
            }
        </tbody>
    </table>
    <button onclick="showBar()">Bar Chart</button>
    <canvas id="barChart" width="800" height="250" style="display:none"></canvas>
</div>
<script src="~/Scripts/Chart.js"></script>
<script>
    var labels = @Html.Raw(Json.Encode(ViewBag.attempts));
    var max = @Html.Raw(Json.Encode(ViewBag.numOfQuestions));
    var results = @Html.Raw(Json.Encode(ViewBag.correctAnswers));
    var colors = [];
    var i = 0;

        while (i < labels.length)
        {
            colors.push('#' + (Math.random() * 0xFFFFFF << 0).toString(16));
            i++
        }
        bar();

    function showBar() {

        var x = document.getElementById("barChart")

        if (x.style.display === "none") {
            x.style.display = "inline";
        } else {
            x.style.display = "none";
        }
    }

    function bar() {
        new Chart(document.getElementById("barChart"), {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [
                    {
                        label: "Correct answers",
                        backgroundColor: colors,
                        data: results,
                    }
                ]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true,
                            suggestedMax: max
                        },
                        scaleLabel: {
                            display: true,
                            labelString: "Correct Answers"
                        }
                    }],
                    xAxes: [{

                        scaleLabel: {
                            display: true,
                            labelString: "Attempts"
                        }
                    }]
                }
            }
        });
    }
</script>

